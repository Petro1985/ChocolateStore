@page "/Product/{ProductId:guid}"
@inject IUserProfile userProfile
@inherits ProductInfoBase

@if (Product is null)
{
    <h3>Loading products...</h3>
}
else
{
    <h3 class="mb-5">Products</h3>

    var photos = Product.Photos.ToList();
    var photosCount = photos.Count();

    if (photosCount > 0)
    {
        const int itemsPerRow = 4;


        for (int i = 0; i < photosCount; i++)
        {
            IEnumerable<Guid> photosRowList = photos.Skip(i * itemsPerRow).Take(itemsPerRow);

            <div class="row mt-3">
                <DisplayProductInfo Photos="@photosRowList"></DisplayProductInfo>
            </div>
        }
    }
    
    if (userProfile.IsLoggedIn() && userProfile.IsAdmin())
    {
        <div class="row mt-3">
            <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12">
                <a
                    @onclick="() => { _addPhotoForm.Open();}" style="cursor:pointer;">
                    <div class="card">
                        <img class="img-thumbnail" src="https://localhost:7213/Images/add_new_item.png" alt="AddNewItem"/>
                        <div class="card-body">
                            <h5 class="card-title mb-3">
                                Добавить новый товар
                            </h5>
                        </div>
                    </div>
                </a>
            </div>
        </div>
        <AddPhotoModal @ref="_addPhotoForm" Product="Product" AfterAddingCallBack="async () => { Product = await ProductServ.GetProduct(ProductId); StateHasChanged(); }"></AddPhotoModal>
        
    }
    
}

@code {
    private AddPhotoModal _addPhotoForm { get; set; }
}