@using Models
@using ChocolateUI.Services.Contracts
@using Models.Category
@using Models.Product
@inject IProductService productService

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Создание новой категории</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-floating">
                    <input id="ProductNameInput" class="form-control" type="text" @bind="NewProduct.Name" placeholder="Product name"/>
                    <label for="ProductNameInput">Имя Продукта</label>
                </div>

                <div class="form-floating mt-2">
                    <textarea id="DescriptionInput" class="form-control" type="text" @bind="NewProduct.Description" placeholder="Description" style="height: 12rem"></textarea>
                    <label for="DescriptionInput">Описание</label>
                </div>

                <div class="form-floating mt-2">
                    <div class="input-group" id="PriceRubInput">
                        <input class="form-control" type="number" @bind="NewProduct.PriceRub" placeholder="Price"/>
                        <div class="input-group-text">руб.</div>
                    </div>
                    <label for="PriceRubInput"></label>
                </div>

                <div class="form-floating mt-2">
                    <input id="TimeToMakeInHoursInput" class="form-control" type="number" @bind="NewProduct.TimeToMakeInHours" placeholder="TimeToMake"/>
                    <label for="TimeToMakeInHoursInput">Требуемое на производство время</label>
                </div>

                <div class="form-floating mt-2">
                    <input id="CategoryNameInput" class="form-control" type="text" readonly value="@Category.Name"/>
                    <label for="CategoryNameInput">Категория</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="CreateProduct">Создать</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="Close">Отмена</button>
            </div>
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {

    [Parameter]
    public Func<Task> AfterAddingCallBack { get; set; }
    [Parameter]
    public CategoryDTO Category { get; set; }

    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public ProductDTO NewProduct { get; set; } = new ();
    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    public async Task CreateProduct()
    {
        Close();
        NewProduct.CategoryId = Category.Id;
        await productService.CreateNewProduct(NewProduct);
        await AfterAddingCallBack.Invoke();
        // uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true);
    }
}