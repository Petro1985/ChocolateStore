@using ChocolateUI.Services
@using System.Security.AccessControl
@using ChocolateUI.Pages.Components
@using Microsoft.VisualBasic.FileIO
@using Models.Category
@inherits DisplayCategoriesBase

@foreach (var value in Categories)
{
    var item = value.Value;
    <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12">
        <a href="/Category/@item.Id">
            <div class="card">
                @* <div class="card-body"> *@
                    <img class="img-thumbnail" src="@FetchService.GetImageUrl(@item.MainPhotoId)" alt="ProductMainPhoto"/>
                    @if (UserProfile.IsAdmin())
                    {
                        <DeleteItem DeleteFunction="async (x) => await RemoveCategory(x.Id)" Element="item"></DeleteItem>
                    }
                @* </div> *@
                <div class="card-footer position-relative">
                    <h5 class="card-title mb-3">
                        @item.Name
                    </h5>
                    @if (UserProfile.IsAdmin())
                    {
                        <button
                            @onclick:preventDefault="true"
                            @onclick:stopPropagation="true"
                            @onclick="() => _editCategoryForm.Open(item)"
                            class="btn btn-success position-absolute bottom-0 end-0" style="height: 100%">Редактировать
                        </button>
                    }
                </div>
            </div>
        </a>
    </div>
}
<AddOrEditCategoryModal @ref="_editCategoryForm" UpdateCategory="UpdateCategory"></AddOrEditCategoryModal>

@code
{
    [Parameter] 
    public Dictionary<Guid, CategoryDTO>? Categories { get; set; }
    [Parameter]
    public Func<CategoryDTO, Task>? UpdateCategory { get; set; }
    [Parameter]
    public Func<Guid, Task>? DeleteCategory { get; set; }

    private AddOrEditCategoryModal _editCategoryForm;

    private async Task RemoveCategory(Guid id)
    {
        if (DeleteCategory is not null)
        {
            await DeleteCategory(id);
        }
        else
        {
            Logger.LogWarning("В компонент {ComponentName} не передан параметр {ParameterName}", nameof(DisplayCategories), nameof(DeleteCategory));
        }
    }
}