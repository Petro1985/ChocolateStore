@using ChocolateUI.Services
@inject ILogger<ChoosePhoto> Logger;
@inject IFetchService FetchService

<div class="form-control">
    @if (IsMultiple)
    {
        <InputFile id="images" OnChange="LoadFile"  multiple 
                   accept="image/jpeg, image/png" class="visually-hidden"/>
    }
    else
    {
        <InputFile id="images" OnChange="LoadFile"
                   accept="image/jpeg, image/png" class="visually-hidden"/>
    }
    <label class="btn btn-primary col-12" for="images">Выбирите файлы изображений</label>
</div>
<div class="container">
    <div class="row">
        @if (string.IsNullOrWhiteSpace(_imageData))
        {
            <img src="@CurrentImage" alt="" class="col-12" style="padding: 0"/>
        }
        else
        {
            <img src="data:image/png;base64,@_imageData" alt="" class="col-12" style="padding: 0"/>
        }
    </div>
</div>

@code 
{
    [Parameter]
    public bool IsMultiple { get; set; }
    
    private string _currentImage = "/images/NoImage.png";
    public string CurrentImage
    {
        get => _currentImage;
        set
        {
            _currentImage = value;
            StateHasChanged();
        }
    }

    public string _imageData = "";

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        try
        {
            var format = "image/png";
            await using var stream = e.File.OpenReadStream(e.File.Size);
            var croppedPhoto = await FetchService.CropPhoto(stream);
            _imageData = croppedPhoto;
        }
        catch (Exception exception)
        {
            Logger.LogError(exception, "Ошибка загрузки файла изображения");
            throw;
        }
    }

    public string GetImageBase64()
    {
        return _imageData;
    }

    public void ClearImage()
    {
        _imageData = "";
    }

    public void Show()
    {
        StateHasChanged();
    }
}