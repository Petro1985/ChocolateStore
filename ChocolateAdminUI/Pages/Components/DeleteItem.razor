@inject ILogger<DeleteItem<TItem>> Logger
@typeparam TItem

<div
    @onclick:preventDefault="true"
    @onclick:stopPropagation="true"
    style="cursor: default">
    <button
        @onclick:preventDefault="true"
        @onclick:stopPropagation="true"
        @onclick="Open"
        class="btn btn-close position-absolute" style="top: 5px; right: 5px;">
    </button>

    <div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Подтвердите удаление элемента</h3>
                    <button
                        type="button"
                        class="close"
                        data-dismiss="modal"
                        aria-label="Close"
                        @onclick="Close">
                        <span aria-hidden="true">x</span>
                    </button>
                </div>
                <div class="modal-body">
                    <button
                        type="button" class="btn btn-danger"
                        @onclick="Delete">
                        Удалить
                    </button>
                    <button type="button"
                            class="btn btn-secondary"
                            data-dismiss="modal"
                            @onclick="Close"
                            @onclick:preventDefault="true"
                            @onclick:stopPropagation="true">
                        Отмена
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {

    [Parameter]
    public Func<TItem, Task> DeleteFunction { get; set; }

    [Parameter]
    public TItem Element { get; set; }


    private string ModalDisplay = "none;";
    private string ModalClass = "";
    private bool ShowBackdrop = false;

    private async Task Delete()
    {
        Logger.LogInformation(@"Element {Type} was deleted", typeof(TItem));
        await DeleteFunction(Element);
        Close();
    }

    private void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    private void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}